# Base Kubernetes resources for the Gateway API Inference Extension conformance tests.
# This includes namespaces and a minimal set of resources (Gateway, Backend)
# required by many tests. More specific resources should be defined within
# individual test files or other resource directories (e.g., sample_backends).

---
# Namespace for core infrastructure like Gateways.
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-infra
  labels:
    gateway-conformance: infra
---
# Namespace for application backends (potentially simulating model servers
# or where InferencePools might reside in some tests).
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-app-backend
  labels:
    gateway-conformance: backend
---
# Namespace for simple web server backends. This is expected by
# the upstream conformance suite's Setup method.
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-conformance-web-backend
  labels:
    gateway-conformance: web-backend
---
# A basic Gateway resource that allows HTTPRoutes from the same namespace.
# Tests can use this as a parent reference for routes that target InferencePools.
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: conformance-gateway
  namespace: gateway-conformance-infra
spec:
  # The conformance suite runner will replace this placeholder
  # with the actual GatewayClass name provided via flags.
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http # Standard listener name
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
      kinds:
      # Allows HTTPRoutes to attach, which can then reference InferencePools.
      - group: gateway.networking.k8s.io
        kind: HTTPRoute
---
# --- Conformance Secondary Gateway Definition ---
# A second generic Gateway resource for tests requiring multiple Gateways.
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: conformance-secondary-gateway
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    hostname: "secondary.example.com" # Distinct hostname to differentiate from conformance-gateway
    allowedRoutes:
      namespaces:
        from: All
---
# --- Backend Deployment for Inference Model 1 (using echo-basic) ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-model-1-deployment
  namespace: gateway-conformance-app-backend
  labels:
    app: inference-model-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inference-model-1
  template:
    metadata:
      labels:
        app: inference-model-1
    spec:
      containers:
      - name: echo-basic-1
        image: gcr.io/k8s-staging-gateway-api/echo-basic:v20240412-v1.0.0-394-g40c666fd
        ports:
        - name: http
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 5
          failureThreshold: 2
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
# --- Backend Deployment for Inference Model 2 (using echo-basic) ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-model-2-deployment
  namespace: gateway-conformance-app-backend
  labels:
    app: inference-model-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inference-model-2
  template:
    metadata:
      labels:
        app: inference-model-2
    spec:
      containers:
      - name: echo-basic-2
        image: gcr.io/k8s-staging-gateway-api/echo-basic:v20240412-v1.0.0-394-g40c666fd
        ports:
        - name: http
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 5
          failureThreshold: 2
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
